<rdf:RDF
  xmlns:dcterms='http://purl.org/dc/terms/'
  xmlns:oxds='http://vocab.ox.ac.uk/dataset/schema#'
  xmlns:ore='http://www.openarchives.org/ore/terms/'
  xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'
>
  <oxds:DataSet rdf:about="">
    <dcterms:title>Test dataset with merged metadata</dcterms:title>
  </oxds:DataSet>
</rdf:RDF>

from rdflib import ConjunctiveGraph
from rdflib import StringInputSource
from rdflib import Namespace, RDF, RDFS, URIRef

g = ConjunctiveGraph()
ssrc = StringInputSource(a)
ga2 = g.parse(ssrc, format='xml')

for s,p,o in ga2.triples((None, None, None)):
    print s,p,o
for s,p,o in ga2.triples((None, RDF.type, None)):
    print s,p,o
    if str(o) == 'http://vocab.ox.ac.uk/dataset/schema#DataSet':
        print 'removed triple'
        ga2.remove((s, p, o))


ga2 = g.parse('/tmp/a.rdf', format='xml')for s,p,o in ga2.triples((None, RDF.type, None)):
gb2 = g.parse('/tmp/b.rdf', format='xml')
for s,p,o in ga2.triples((None, None, None)):
    print s,p,o
for s,p,o in ga.triples((None, RDF.type, None)):
    print s,p,o
for s,p,o in ga.triples((None, URIRef('http://www.w3.org/2000/01/rdf-schema#seeAlso'), None)):
    print s,p,o
for s,p,o in ga.triples((None, RDFS.seeAlso, None)):
    print s,p,o
ns = dict(g.namespaces())




#This replacs the uri with the one given in Public Id. Not using this
#ga = g.parse('/tmp/a.rdf', publicID="http://donotuse", format='xml')
#gb = g.parse('/tmp/b.rdf', publicID="http://donotuse", format='xml')
#gc = g.parse('/tmp/c.rdf', publicID="http://donotuse", format='xml')
#gd = g.parse('/tmp/d.rdf', publicID="http://donotuse", format='xml')

